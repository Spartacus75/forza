[{"D:\\ReactProject\\BETA\\forza\\src\\index.js":"1","D:\\ReactProject\\BETA\\forza\\src\\App.js":"2","D:\\ReactProject\\BETA\\forza\\src\\reportWebVitals.js":"3","D:\\ReactProject\\BETA\\forza\\src\\Components\\Login.js":"4","D:\\ReactProject\\BETA\\forza\\src\\Components\\Main.js":"5","D:\\ReactProject\\BETA\\forza\\src\\Components\\MyAppBar.js":"6","D:\\ReactProject\\BETA\\forza\\src\\Assets\\AppBar.js":"7","D:\\ReactProject\\BETA\\forza\\src\\firebase.js":"8","D:\\ReactProject\\BETA\\forza\\src\\Context\\AuthContext.js":"9","D:\\ReactProject\\BETA\\forza\\src\\Components\\ForgotPassword.js":"10","D:\\ReactProject\\BETA\\forza\\src\\Components\\Filter.js":"11","D:\\ReactProject\\BETA\\forza\\src\\Components\\List.js":"12","D:\\ReactProject\\BETA\\forza\\src\\Assets\\Button.js":"13","D:\\ReactProject\\BETA\\forza\\src\\Assets\\Dialog.js":"14","D:\\ReactProject\\BETA\\forza\\src\\Assets\\Select.js":"15","D:\\ReactProject\\BETA\\forza\\src\\data.js":"16","D:\\ReactProject\\BETA\\forza\\src\\Assets\\DatePicker.js":"17","D:\\ReactProject\\BETA\\forza\\src\\Assets\\SmallAlert.js":"18","D:\\ReactProject\\BETA\\forza\\src\\functions.js":"19","D:\\ReactProject\\BETA\\forza\\src\\Assets\\DialogForChange\\DialogQtty.js":"20","D:\\ReactProject\\BETA\\forza\\src\\Assets\\PrivateRoute.js":"21"},{"size":502,"mtime":1610029769913,"results":"22","hashOfConfig":"23"},{"size":1619,"mtime":1611610497005,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":2558,"mtime":1610036625134,"results":"26","hashOfConfig":"23"},{"size":55790,"mtime":1611740651878,"results":"27","hashOfConfig":"23"},{"size":1979,"mtime":1611677293501,"results":"28","hashOfConfig":"23"},{"size":5787,"mtime":1611678762354,"results":"29","hashOfConfig":"23"},{"size":534,"mtime":1610450706929,"results":"30","hashOfConfig":"23"},{"size":3092,"mtime":1610035323667,"results":"31","hashOfConfig":"23"},{"size":2022,"mtime":1610039487154,"results":"32","hashOfConfig":"23"},{"size":5488,"mtime":1611094992718,"results":"33","hashOfConfig":"23"},{"size":18349,"mtime":1611738473766,"results":"34","hashOfConfig":"23"},{"size":533,"mtime":1610312572122,"results":"35","hashOfConfig":"23"},{"size":7065,"mtime":1610459000126,"results":"36","hashOfConfig":"23"},{"size":1500,"mtime":1610798626892,"results":"37","hashOfConfig":"23"},{"size":2799,"mtime":1611071400516,"results":"38","hashOfConfig":"23"},{"size":1114,"mtime":1610918691554,"results":"39","hashOfConfig":"23"},{"size":1681,"mtime":1610457181398,"results":"40","hashOfConfig":"23"},{"size":1943,"mtime":1611488311253,"results":"41","hashOfConfig":"23"},{"size":1387,"mtime":1610816544587,"results":"42","hashOfConfig":"23"},{"size":430,"mtime":1611610384024,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"25t81l",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\ReactProject\\BETA\\forza\\src\\index.js",[],["94","95"],"D:\\ReactProject\\BETA\\forza\\src\\App.js",[],"D:\\ReactProject\\BETA\\forza\\src\\reportWebVitals.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Components\\Login.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Components\\Main.js",["96","97","98","99"],"D:\\ReactProject\\BETA\\forza\\src\\Components\\MyAppBar.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Assets\\AppBar.js",["100","101","102","103","104","105","106","107","108","109"],"D:\\ReactProject\\BETA\\forza\\src\\firebase.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Context\\AuthContext.js",["110","111"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {auth} from '../firebase.js'\r\n\r\nimport firebase from '../firebase.js'\r\n\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n  return useContext(AuthContext)\r\n}\r\n\r\n\r\n\r\nexport  function AuthProvider({children}){\r\n\r\nconst [currentUser, setCurrentUser] = useState()\r\nconst [loading, setLoading] = useState(true)\r\n\r\n\r\nfunction signup(email, password) {\r\n  return auth.createUserWithEmailAndPassword(email, password)\r\n}\r\n\r\n\r\nfunction login(email, password){\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n}\r\n\r\nfunction updateUserData(user, name){\r\n\r\nconsole.log(user)\r\n\r\n    console.log('currentUser dans updateUser', user)\r\n\r\n      user.updateProfile({\r\n            displayName: \"Jane Q. User\"\r\n            })\r\n            .then(function() {\r\n              // Update successful.\r\n              //return currentUser.displayName\r\n              console.log('Username updated')\r\n\r\n            })\r\n            .catch(function(error) {\r\n              // An error happened.\r\n              console.log('error update Username: ', error)\r\n            });\r\n\r\n}\r\n\r\nfunction logout(){\r\n  return auth.signOut()\r\n}\r\n\r\nfunction resetPassword(email){\r\n  return auth.sendPasswordResetEmail(email)\r\n}\r\n\r\nfunction updateEmail(email){\r\n  return currentUser.updateEmail(email)\r\n}\r\n\r\nfunction updatePassword(password){\r\n  return currentUser.updatePassword(password)\r\n}\r\n\r\nfunction changeStatus(){\r\n  return auth.onAuthStateChanged(user => {return user})\r\n}\r\n\r\nfunction updateUsername(name){\r\n  //console.log('Firebase function', name)\r\n\r\n  currentUser.updateProfile({\r\n  displayName: name\r\n  //photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n}).then(function() {\r\n  // Profile updated successfully!\r\n  // \"Jane Q. User\"\r\n  var displayName = currentUser.displayName;\r\n  console.log('The username has been properly updated!')\r\n  // \"https://example.com/jane-q-user/profile.jpg\"\r\n  //var photoURL = user.photoURL;\r\n}, function(error) {\r\n  // An error happened.\r\n  console.log('error in the username update - ', error )\r\n});\r\n\r\n\r\n}\r\n\r\nfunction updateCountry(id){\r\n\r\n  currentUser.updateProfile({\r\n  //phoneNumber: id\r\n  photoURL: id\r\n}).then(function() {\r\n  // Profile updated successfully!\r\n  // \"Jane Q. User\"\r\n  //var newCountryId = currentUser.phoneNumber;\r\n  console.log('The country has been properly updated! ', id)\r\n  // \"https://example.com/jane-q-user/profile.jpg\"\r\n  //var photoURL = user.photoURL;\r\n}, function(error) {\r\n  // An error happened.\r\n  console.log('error in the country update - ')\r\n});\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n  const unsubscribe = auth.onAuthStateChanged(user =>{\r\n\r\n    setCurrentUser(user)\r\n    setLoading(false)\r\n  })\r\n\r\nreturn unsubscribe\r\n\r\n}, [])\r\n\r\n\r\nconst value = {\r\n  currentUser,\r\n  signup,\r\n  login,\r\n  logout,\r\n  resetPassword,\r\n  updateEmail,\r\n  updatePassword,\r\n  updateUserData,\r\n  changeStatus,\r\n  updateUsername,\r\n  updateCountry\r\n}\r\n\r\n  return (\r\n\r\n\r\n<AuthContext.Provider value={value}>\r\n{!loading && children}\r\n</AuthContext.Provider>\r\n\r\n  )\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Components\\ForgotPassword.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Components\\Filter.js",["112"],"import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PrioritySelect from '../Assets/Select'\r\nimport CountrySelect from '../Assets/Select'\r\nimport BladeSelect from '../Assets/Select'\r\nimport TowerSelect from '../Assets/Select'\r\nimport GenerationSelect from '../Assets/Select'\r\nimport TMSelect from '../Assets/Select'\r\nimport SMSelect from '../Assets/Select'\r\nimport RoadSurveySelect from '../Assets/Select'\r\nimport LogBudgetSelect from '../Assets/Select'\r\nimport GateSelect from '../Assets/Select'\r\nimport StatusSelect from '../Assets/Select'\r\nimport Button from '../Assets/Button'\r\n\r\nimport {\r\n  countries,\r\n  dataQtty,\r\n  dataGeneration,\r\n  dataBlades,\r\n  dataTowers,\r\n  dataTM,\r\n  dataSM,\r\n  dataPriorities,\r\n  dataRoadSurvey,\r\n  dataLOGBudget,\r\n  dataGate,\r\n  tenderStatus\r\n} from '../data.js'\r\n\r\n\r\nexport default function Filter({\r\n  //Priority\r\n  valueFilterPriority,\r\n  onChangeFilterPriority,\r\n  //Blades\r\n  valueFilterBlade,\r\n  onChangeFilterBlade,\r\n  //TOWER\r\n  valueFilterTower,\r\n  onChangeFilterTower,\r\n  //GENERATION\r\n  valueFilterGeneration,\r\n  onChangeFilterGeneration,\r\n  //TM\r\n  valueFilterTM,\r\n  onChangeFilterTM,\r\n  //SM\r\n  valueFilterSM,\r\n  onChangeFilterSM,\r\n  //Road Survey\r\n  valueFilterRoadSurvey,\r\n  onChangeFilterRoadSurvey,\r\n  //LOG Budget\r\n  valueFilterLOGBudget,\r\n  onChangeFilterLOGBudget,\r\n  //Gate\r\n  valueFilterGate,\r\n  onChangeFilterGate,\r\n  //Status\r\n  valueFilterStatus,\r\n  onChangeFilterStatus,\r\n  //projects\r\n  valueFilterProject,\r\n  onChangeFilterProject,\r\n  //client\r\n  valueFilterClient,\r\n  onChangeFilterClient,\r\n  //country\r\n  valueFilterCountry,\r\n  onChangeFilterCountry,\r\n  //Click pour reset\r\n  onClickResetFilter\r\n\r\n}){\r\n\r\n  const styles = {\r\n    filter: {\r\n      //backgroundColor: 'red',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap'\r\n    },\r\n    layout: {\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div style={styles.filter}>\r\n\r\n\r\n          <div>\r\n              <TextField\r\n                label='Filter Project'\r\n                value={valueFilterProject}\r\n                onChange={onChangeFilterProject}\r\n                variant='outlined'\r\n              />\r\n          </div>\r\n\r\n          <div>\r\n\r\n              <CountrySelect\r\n                  label='Filter Country'\r\n                  value={valueFilterCountry}\r\n                  onChange={onChangeFilterCountry}\r\n                  data={countries}\r\n              />\r\n          </div>\r\n\r\n          <div>\r\n\r\n              <BladeSelect\r\n                  label='Filter Blade'\r\n                  value={valueFilterBlade}\r\n                  onChange={onChangeFilterBlade}\r\n                  data={dataBlades}\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n              <TowerSelect\r\n                  label='Filter Tower'\r\n                  value={valueFilterTower}\r\n                  onChange={onChangeFilterTower}\r\n                  data={dataTowers}\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n              <GenerationSelect\r\n                  label='Filter Generation'\r\n                  value={valueFilterGeneration}\r\n                  onChange={onChangeFilterGeneration}\r\n                  data={dataGeneration}\r\n              />\r\n          </div>\r\n          <div>\r\n              <TextField\r\n                label='Filter Client'\r\n                value={valueFilterClient}\r\n                onChange={onChangeFilterClient}\r\n                variant='outlined'\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n              <PrioritySelect\r\n\r\n                  label='Filter Priority'\r\n                  value={valueFilterPriority}\r\n                  onChange={onChangeFilterPriority}\r\n                  data={dataPriorities}\r\n\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n              <TMSelect\r\n\r\n                  label='Filter Tender Manager'\r\n                  value={valueFilterTM}\r\n                  onChange={onChangeFilterTM}\r\n                  data={dataTM}\r\n\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n\r\n              <SMSelect\r\n\r\n                  label='Filter Sales Manager'\r\n                  value={valueFilterSM}\r\n                  onChange={onChangeFilterSM}\r\n                  data={dataSM}\r\n\r\n              />\r\n\r\n          </div>\r\n          <div>\r\n\r\n\r\n              <RoadSurveySelect\r\n\r\n                  label='Filter Road Survey'\r\n                  value={valueFilterRoadSurvey}\r\n                  onChange={onChangeFilterRoadSurvey}\r\n                  data={dataRoadSurvey}\r\n\r\n              />\r\n\r\n          </div>\r\n          <div>\r\n\r\n\r\n              <LogBudgetSelect\r\n\r\n                  label='Filter Log Budget'\r\n                  value={valueFilterLOGBudget}\r\n                  onChange={onChangeFilterLOGBudget}\r\n                  data={dataLOGBudget}\r\n\r\n              />\r\n\r\n          </div>\r\n          <div>\r\n\r\n\r\n              <GateSelect\r\n\r\n                  label='Filter Gate'\r\n                  value={valueFilterGate}\r\n                  onChange={onChangeFilterGate}\r\n                  data={dataGate}\r\n\r\n              />\r\n          </div>\r\n          <div>\r\n\r\n              <StatusSelect\r\n\r\n                  label='Filter Status'\r\n                  value={valueFilterStatus}\r\n                  onChange={onChangeFilterStatus}\r\n                  data={tenderStatus}\r\n\r\n              />\r\n\r\n          </div>\r\n\r\n    </div>\r\n\r\n    <Button\r\n      onClick={onClickResetFilter}\r\n      label='Reset Filter'\r\n\r\n    />\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Components\\List.js",["113"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport moment from 'moment'\r\nimport firebase from '../firebase.js'\r\n\r\n\r\n\r\n\r\n\r\n\r\n//CREATION DES DONNEES\r\n/*\r\nfunction createData(name, qtty_1, blade_1, tower_1, generation, client, priority, country, order_intake, kickoff, TM, SM, RS, logBudget, gateStatus, comments, status) {\r\n  return { name, qtty_1, blade_1, tower_1, generation, client, priority, country, order_intake, kickoff, TM, SM, RS, logBudget, gateStatus, comments, status};\r\n}\r\n*/\r\n\r\n/*\r\nconst rows = [\r\n  createData('Craco', 10, 'N131', 'TS114', 'Delta', 'Margherita', 'High', 'Italy', moment('2020/11/30').format('X'), moment('2019/10/03').format('X'), 'H. Del Fabbro', 'G. Celliberti', 'yes', 'yes', 'Gate4', 'handover done fdsfdsf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g sf fdsgf gfdggg gg g ', 'closed' ),\r\n  createData('San Carlo', 2, 'N131', 'TS84', 'Delta', 'Margherita', 'Low', 'Italy', moment('2020/03/01').format('X'), moment('2020/05/05').format('X'), 'H. Del Fabbro', 'G. Celliberti', 'yes', 'no', 'Gate3', 'handover done', 'open'),\r\n  createData('Kella', 9, 'N149', 'TS105', 'Delta 4000', 'Motor Oil Hellas', 'Medium','Greece', moment('2020/12/15').format('X'), moment('2018/02/08').format('X'), 'M. Seduk', 'P. Lappas', 'no', 'yes', 'Gate3', 'handover done', 'open')\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0)\r\n];*/\r\n\r\n\r\n//FONCTION POUR LE TRI EN GENERAL\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  //console.log(orderBy)\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n//TITRE DES COLONNES\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n  { id: 'qtty_1', numeric: true, disablePadding: false, label: 'Qtty (1)' },\r\n  { id: 'blade_1', numeric: true, disablePadding: false, label: 'Blade (1)' },\r\n  { id: 'tower_1', numeric: true, disablePadding: false, label: 'Tower (1)' },\r\n  { id: 'generation', numeric: true, disablePadding: false, label: 'Generation ' },\r\n  { id: 'client', numeric: true, disablePadding: false, label: 'Client' },\r\n  { id: 'priority', numeric: true, disablePadding: false, label: 'Priority' },\r\n  { id: 'country', numeric: true, disablePadding: false, label: 'Country' },\r\n  { id: 'order_intake', numeric: true, disablePadding: false, label: 'Order Intake' },\r\n  { id: 'kickoff', numeric: true, disablePadding: false, label: 'Kick-Off' },\r\n  { id: 'TM', numeric: true, disablePadding: false, label: 'Tender Manager' },\r\n  { id: 'SM', numeric: true, disablePadding: false, label: 'Sales Manager' },\r\n  { id: 'RS', numeric: true, disablePadding: false, label: 'Road Survey' },\r\n  { id: 'logBudget', numeric: true, disablePadding: false, label: 'LOG Budget?' },\r\n  { id: 'gateStatus', numeric: true, disablePadding: false, label: 'Gate' },\r\n  { id: 'comments', numeric: true, disablePadding: false, label: 'Comments' },\r\n  { id: 'status', numeric: true, disablePadding: false, label: 'Status' }\r\n\r\n];\r\n\r\n//RENDU DE LA COLONNE DE TITRE\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    //console.log('colonne ', property, ' clicked')\r\n    //console.log(event, property)\r\n    onRequestSort(event, property);\r\n\r\n  };\r\n\r\n  const styles ={\r\n    titre:{\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n\r\n\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n              style={styles.titre}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n\r\n\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n//BAR AU DESSUS DU TABLEAU PRINCIPALE (incluant logique)\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, onClickSelection, onClickFilter, children } = props;\r\n\r\n  return (\r\n    <>\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Tender Project Review\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon onClick={onClickSelection} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon onClick={onClickFilter} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n\r\n    </Toolbar>\r\n\r\n    {children}\r\n    </>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  survolLigne: {\r\n    backgroundColor: 'white'\r\n  },\r\n  survolItem: {\r\n    //backgroundColor: 'red',\r\n    '&:hover': {\r\n      background: \"#FFD29A\",\r\n      borderRadius: '15px'\r\n    }\r\n  },\r\n}));\r\n\r\n//FONCTION PRINCIPALE\r\n\r\nexport default function EnhancedTable({\r\n\r\n  tableau,\r\n  onClickQtty,\r\n  onClickBlade,\r\n  onClickTower,\r\n  onClickGeneration,\r\n  onClickPriority,\r\n  onClickCountry,\r\n  onClickTM,\r\n  onClickSM,\r\n  onClickRoad,\r\n  onClickLOGBudget,\r\n  onClickGate,\r\n  onClickStatus,\r\n  onClickClient,\r\n  onClickComments,\r\n  onClickKO,\r\n  onClickOI,\r\n  onClickFilter,\r\n  children\r\n\r\n}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = tableau.map((n) => n.project);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n\r\n//console.log('event', event)\r\n//console.log('name', name)\r\n\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, tableau.length - page * rowsPerPage);\r\n\r\n\r\n  const onClickSelection = () => {\r\n    //console.log('dans la fonction', selected)\r\n    //ici on supprime les projets selectionnés\r\n\r\n    selected.forEach(item => {\r\n\r\n\r\n\r\n      console.log('on va supprimer ', item)\r\n\r\n      var myQuery = firebase.firestore().collection(\"Projects\").where(\"project\", \"==\", item)\r\n\r\n      myQuery.get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n          doc.ref.delete();\r\n\r\n\r\n\r\n    setSelected([])\r\n  });\r\n});\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} onClickSelection={onClickSelection} onClickFilter={onClickFilter} children={children} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={tableau.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(tableau, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.project);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      //onClick={(event) => handleClick(event, row.project)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                      className={classes.survolLigne}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, row.project)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.project}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickQtty(row.project, row.quantity)} hover className={classes.survolItem}>{row.quantity}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickBlade(row.project, row.blade)} hover className={classes.survolItem}>{row.blade}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickTower(row.project, row.tower)} hover className={classes.survolItem}>{row.tower}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickGeneration(row.project, row.generation)} hover className={classes.survolItem}>{row.generation}</TableCell>\r\n\r\n                      <TableCell align=\"right\" onClick={()=>onClickClient(row.project, row.client)} hover className={classes.survolItem}>{row.client}</TableCell>\r\n\r\n                      <TableCell align=\"right\"  onClick={()=>onClickPriority(row.project, row.priority)} hover className={classes.survolItem} >{row.priority}</TableCell>\r\n                      <TableCell align=\"right\"  onClick={()=>onClickCountry(row.project, row.country)} hover className={classes.survolItem} >{row.country}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickOI(row.project,row.dateOI)} hover className={classes.survolItem}>{moment(row.dateOI).format(\"DD/MM/yyyy\")}</TableCell>\r\n\r\n                      <TableCell align=\"right\" onClick={()=>onClickKO(row.project,row.dateKO)} hover className={classes.survolItem}>{moment(row.dateKO).format(\"DD/MM/yyyy\")}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickTM(row.project, row.tm)} hover className={classes.survolItem}>{row.tm}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickSM(row.project, row.sm)} hover className={classes.survolItem}>{row.sm}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickRoad(row.project, row.roadSurvey)} hover className={classes.survolItem}>{row.roadSurvey}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickLOGBudget(row.project, row.logBudget)} hover className={classes.survolItem}>{row.logBudget}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickGate(row.project, row.gate)} hover className={classes.survolItem}>{row.gate}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickComments(row.project, row.comments)} style={{width: 400}} hover className={classes.survolItem}>{row.comments}</TableCell>\r\n                      <TableCell align=\"right\" onClick={()=>onClickStatus(row.project, row.status)} hover className={classes.survolItem}>{row.status}</TableCell>\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={tableau.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Assets\\Button.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Assets\\Dialog.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Assets\\Select.js",["114"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n//import {countries} from '../data.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 150,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  selectAdjust: {\r\n    width: 220\r\n  }\r\n}));\r\n\r\nexport default function SimpleSelect({\r\n    label,\r\n    value,\r\n    onChange,\r\n    data\r\n\r\n}) {\r\n\r\n\r\n  const classes = useStyles();\r\n/*  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n*/\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">{label}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={value}\r\n          onChange={onChange}\r\n          label={label}\r\n          className={classes.selectAdjust}\r\n        >\r\n\r\n{data.map(item =>\r\n          <MenuItem value={item.name} key={item.id}>{item.name}</MenuItem>\r\n)\r\n}\r\n\r\n        </Select>\r\n      </FormControl>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\data.js",[],"D:\\ReactProject\\BETA\\forza\\src\\Assets\\DatePicker.js",["115"],"import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers(props) {\r\n\r\n  const { labelDatePicker, valueDatePicker, onChangeDatePicker} = props\r\n\r\n  // The first commit of Material-UI\r\n\r\n  /*\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n*/\r\n\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={labelDatePicker}\r\n          format=\"dd/MM/yyyy\"\r\n          value={valueDatePicker}\r\n          onChange={onChangeDatePicker}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Assets\\SmallAlert.js",[],"D:\\ReactProject\\BETA\\forza\\src\\functions.js",["116","117","118"],"export function findWithAttr(array, attr, value) {\r\n  //console.log('array', array)\r\n  //console.log('attr', attr)\r\n  //console.log('value', value)\r\n\r\n    for(var i = 0; i < array.length; i += 1) {\r\n        if(array[i][attr] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function filterArray(array, criteria){\r\n\r\n  var tableauFiltre = array\r\n  //console.log('filtered Array', tableauFiltre)\r\n  //console.log('longueur du tableau', tableauFiltre.length)\r\n\r\n  var tableauTemp\r\n  var counter = 0\r\n  //var tableauTemp =[]\r\n\r\n  Object.keys(criteria).forEach(key => {\r\n\r\n    //console.log('counter', counter)\r\n    //console.log('valeur init tableauTemp', tableauTemp)\r\n\r\n    if (criteria[key] !== '***' && criteria[key] !== '') {\r\n\r\n                  if (tableauTemp?.length >0){\r\n                  tableauTemp = tableauTemp.filter(item => item[key] == criteria[key])\r\n                  console.log('filtre A1')\r\n                  }\r\n\r\n                  if (!tableauTemp){\r\n                  tableauTemp = tableauFiltre.filter(item => item[key] == criteria[key])\r\n                  //counter = counter + 1\r\n                  //console.log('initiation A')\r\n                  console.log('filtre A2')\r\n                  }\r\n\r\n                  //console.log('tableau avec un filtre A ', tableauTemp)\r\n\r\n    } else {\r\n                  //console.log('tableauTemp dans le else', tableauTemp)\r\n                  if (tableauTemp?.length >0){\r\n                    //var tableauTemp = tableauFiltre\r\n                    console.log('on garde le même tableau')\r\n                  } else {\r\n                    tableauTemp = tableauFiltre\r\n                    //console.log('pour debug')\r\n                  }\r\n\r\n\r\n                  //console.log('tableau avec un filtre B', tableauTemp)\r\n\r\n\r\n    }\r\n\r\n  })\r\n\r\n  //console.log('resultat', tableauTemp? tableauTemp : array)\r\n\r\n  return tableauTemp? tableauTemp : array\r\n\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Assets\\DialogForChange\\DialogQtty.js",["119"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function FormDialog({open, handleClose, titleDialog, dialogText, handleValidate, labelValidate, children}) {\r\n\r\n/*\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n*/\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{titleDialog}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {dialogText}\r\n          </DialogContentText>\r\n            {children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleValidate} color=\"primary\">\r\n            {labelValidate}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\ReactProject\\BETA\\forza\\src\\Assets\\PrivateRoute.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":24,"column":8,"nodeType":"126","messageId":"127","endLine":24,"endColumn":18},{"ruleId":"124","severity":1,"message":"128","line":322,"column":7,"nodeType":"126","messageId":"127","endLine":322,"endColumn":24},{"ruleId":"124","severity":1,"message":"129","line":1209,"column":5,"nodeType":"126","messageId":"127","endLine":1209,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":1271,"column":111,"nodeType":"126","messageId":"132","endLine":1271,"endColumn":115},{"ruleId":"124","severity":1,"message":"133","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":16},{"ruleId":"124","severity":1,"message":"134","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":14},{"ruleId":"124","severity":1,"message":"135","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":24},{"ruleId":"124","severity":1,"message":"136","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"124","severity":1,"message":"137","line":18,"column":19,"nodeType":"126","messageId":"127","endLine":18,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":66,"column":10,"nodeType":"126","messageId":"127","endLine":66,"endColumn":14},{"ruleId":"124","severity":1,"message":"139","line":70,"column":10,"nodeType":"126","messageId":"127","endLine":70,"endColumn":15},{"ruleId":"124","severity":1,"message":"140","line":75,"column":9,"nodeType":"126","messageId":"127","endLine":75,"endColumn":21},{"ruleId":"124","severity":1,"message":"141","line":92,"column":9,"nodeType":"126","messageId":"127","endLine":92,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":145,"column":63,"nodeType":"144","messageId":"145","endLine":145,"endColumn":65},{"ruleId":"124","severity":1,"message":"146","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"124","severity":1,"message":"147","line":81,"column":7,"nodeType":"126","messageId":"127","endLine":81,"endColumn":18},{"ruleId":"124","severity":1,"message":"148","line":18,"column":3,"nodeType":"126","messageId":"127","endLine":18,"endColumn":11},{"ruleId":"124","severity":1,"message":"149","line":23,"column":8,"nodeType":"126","messageId":"127","endLine":23,"endColumn":14},{"ruleId":"124","severity":1,"message":"150","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":22},{"ruleId":"124","severity":1,"message":"151","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":21},{"ruleId":"124","severity":1,"message":"152","line":21,"column":7,"nodeType":"126","messageId":"127","endLine":21,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":32,"column":70,"nodeType":"144","messageId":"145","endLine":32,"endColumn":72},{"ruleId":"142","severity":1,"message":"143","line":37,"column":72,"nodeType":"144","messageId":"145","endLine":37,"endColumn":74},{"ruleId":"124","severity":1,"message":"153","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'SmallAlert' is defined but never used.","Identifier","unusedVar","'onClickValidation' is assigned a value but never used.","'newProject' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'CSVDownload' is defined but never used.","'auth' is assigned a value but never used.","'login' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleExport' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'firebase' is defined but never used.","'displayName' is assigned a value but never used.","'dataQtty' is defined but never used.","'Hidden' is defined but never used.","'FormHelperText' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'counter' is assigned a value but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]